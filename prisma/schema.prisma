generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model itens {
  id_item                                Int        @id @default(autoincrement())
  nome                                   String     @db.VarChar(100)
  descricao                              String     @db.VarChar(100)
  categoria                              String?
  status_item                            Boolean    @default(true)
  imagem                                 String?
  cpf_dono                               String?    @db.Char(11)
  usuarios                               usuarios?  @relation(fields: [cpf_dono], references: [cpf], onDelete: NoAction, onUpdate: NoAction)
  proposta_proposta_item_desejadoToitens proposta[] @relation("proposta_item_desejadoToitens")
  proposta_proposta_item_ofertadoToitens proposta[] @relation("proposta_item_ofertadoToitens")
}

model proposta {
  id_proposta                                Int       @id @default(autoincrement())
  item_ofertado                              Int?
  item_desejado                              Int?
  status_proposta                            String    @default("pendente")
  cpf_dono_item                              String?   @db.Char(11)
  cpf_proponente                             String?   @db.Char(11)
  usuarios_proposta_cpf_dono_itemTousuarios  usuarios? @relation("proposta_cpf_dono_itemTousuarios", fields: [cpf_dono_item], references: [cpf], onDelete: NoAction, onUpdate: NoAction)
  usuarios_proposta_cpf_proponenteTousuarios usuarios? @relation("proposta_cpf_proponenteTousuarios", fields: [cpf_proponente], references: [cpf], onDelete: NoAction, onUpdate: NoAction)
  itens_proposta_item_desejadoToitens        itens?    @relation("proposta_item_desejadoToitens", fields: [item_desejado], references: [id_item], onDelete: NoAction, onUpdate: NoAction)
  itens_proposta_item_ofertadoToitens        itens?    @relation("proposta_item_ofertadoToitens", fields: [item_ofertado], references: [id_item], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model usuarios {
  cpf                                        String     @id @db.Char(11)
  nome                                       String     @db.VarChar(100)
  email                                      String     @unique @db.VarChar(100)
  senha                                      String     @db.VarChar(100)
  endereco                                   String     @db.VarChar(200)
  itens                                      itens[]
  proposta_proposta_cpf_dono_itemTousuarios  proposta[] @relation("proposta_cpf_dono_itemTousuarios")
  proposta_proposta_cpf_proponenteTousuarios proposta[] @relation("proposta_cpf_proponenteTousuarios")
}
